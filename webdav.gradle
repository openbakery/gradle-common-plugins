buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
			classpath 'commons-io:commons-io:2.4'
    }
}


repositories {
  mavenCentral()
}

configurations {
  webdavClasspath
}

dependencies {
	webdavClasspath 'com.github.lookfirst:sardine:5.7'
}

ant.taskdef(
	name: 'sardine',
	classname: 'com.github.sardine.ant.SardineTask',
	classpath: configurations.webdavClasspath.asPath
)

if (!project.hasProperty('webDAVURL')) {
	ext.webDAVURL = null
}

if (!project.hasProperty('webDAVFileSetDirectory')) {
  // Default is current folder
  ext.webDAVFileSetDirectory = '.'
}

if (!project.hasProperty('webDAVFileSetNames')) {
  // Default is to upload all files in this folder
  ext.webDAVFileSetNames = ['*']
}

print "WebDAV URL ${webDAVURL}"


import groovy.io.FileType

def getDirectories() {

	def result = []
	new File(webDAVFileSetDirectory).eachFileRecurse (FileType.DIRECTORIES) { file ->
		result << new File(webDAVFileSetDirectory).toURI().relativize( file.toURI() ).toString()
	}
	return result

}


def toPattern(filter) {

	

}

import org.apache.commons.io.FilenameUtils

def getFiles() {
	def result = []
	new File(webDAVFileSetDirectory).eachFileRecurse (FileType.FILES) { file ->
		def fileToAdd =  new File(webDAVFileSetDirectory).toURI().relativize( file.toURI() ).toString()
		webDAVFileSetNames.each() { token ->
			if (FilenameUtils.wildcardMatch(fileToAdd, token)) {
				result << fileToAdd
				return
			}
		}
	}
	return result
}


def createWebDavDirectory(URL) {
	println "create directory " + URL
	ant.sardine() {
    // Create directory first
		createDirectory(url: URL)
	}
}

def putFile(file, URL) {
	def fileToUpload = new File(webDAVFileSetDirectory, file).getAbsolutePath()
	println "putFile " + fileToUpload 
	println "to " + URL
	 ant.sardine() {
		 	put(url: URL, file:fileToUpload)
	 }
}

task webdav() << {

	createWebDavDirectory(webDAVURL)

	getDirectories().each() { directory ->
		def URL = webDAVURL + directory
		createWebDavDirectory(URL)
	}

	getFiles().each() { file -> 
		def URL = webDAVURL + file
		putFile(file, URL)
	}

}
